"use strict";(self.webpackChunkpersonal_data_market=self.webpackChunkpersonal_data_market||[]).push([[6649],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),p=i,D=u["".concat(l,".").concat(p)]||u[p]||h[p]||o;return n?r.createElement(D,a(a({ref:t},d),{},{components:n})):r.createElement(D,a({ref:t},d))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8337:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:2},a="Overview",s={unversionedId:"peopledata-did/did-overview",id:"peopledata-did/did-overview",title:"Overview",description:"PeopleData DID is an implementation DID. It relies on the W3C and DIF recommendations on DID and Vreifiable Credentials data model.",source:"@site/docs/peopledata-did/did-overview.md",sourceDirName:"peopledata-did",slug:"/peopledata-did/did-overview",permalink:"/docs/peopledata-did/did-overview",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Delegation/Guardianship data exchange",permalink:"/docs/data-agreements/delegation"},next:{title:"Peopledata DID Specification(draft version 0.1.0)",permalink:"/docs/peopledata-did/peopledata-did-specification"}},l={},c=[{value:"Architectural Considerations",id:"architectural-considerations",level:2},{value:"1. Creation of a DID",id:"1-creation-of-a-did",level:3},{value:"2. Determining the DID subject",id:"2-determining-the-did-subject",level:3},{value:"3. Referring to the DID document",id:"3-referring-to-the-did-document",level:3},{value:"4. Statements in the DID document",id:"4-statements-in-the-did-document",level:3},{value:"5. Discovering more information about the DID subject",id:"5-discovering-more-information-about-the-did-subject",level:3},{value:"6. Serving a representation of the DID subject",id:"6-serving-a-representation-of-the-did-subject",level:3},{value:"7. Assigning DIDs to existing web resources",id:"7-assigning-dids-to-existing-web-resources",level:3},{value:"8. he relationship between DID controllers and DID subjects",id:"8-he-relationship-between-did-controllers-and-did-subjects",level:3},{value:"8.1 Set #1: The DID subject is the DID controller",id:"81-set-1-the-did-subject-is-the-did-controller",level:4},{value:"8.2 Set #2: The DID subject is not the DID controller",id:"82-set-2-the-did-subject-is-not-the-did-controller",level:4},{value:"9. Multiple DID controllers",id:"9-multiple-did-controllers",level:3},{value:"9.1 Independent Control",id:"91-independent-control",level:4},{value:"9.2 Group Control",id:"92-group-control",level:4},{value:"10. Change the DID subject",id:"10-change-the-did-subject",level:3},{value:"11. Changing the DID controller",id:"11-changing-the-did-controller",level:3},{value:"Architectural Implenmentations",id:"architectural-implenmentations",level:2},{value:"The Layered Architecture",id:"the-layered-architecture",level:2},{value:"The General Steps",id:"the-general-steps",level:2}],d={toc:c};function h(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("p",null,"PeopleData DID is an implementation DID. It relies on the W3C and DIF recommendations on DID and Vreifiable Credentials data model. "),(0,i.kt)("p",null,"The overview of DID architecture and the relationship of the basic components illustrated as below:\n",(0,i.kt)("img",{src:n(2860).Z,width:"1121",height:"778"})),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=SHuRRaOBMz4"},"DIDs fundamentals and deep dive")," webinar by Markus Sabadello, Founder and CEO of Danube Tech, and Drummond Reed, Chief Trust Officer at Evernym, co-authors of the DID chapter of the \u201cSelf-Sovereign Identity:\nDecentralized Digital Identity and Verifiable Credentials\u201d book published by Manning will explain all the fundamentals of DIDs."),(0,i.kt)("h2",{id:"architectural-considerations"},"Architectural Considerations"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(2860).Z,width:"1121",height:"778"})),(0,i.kt)("h3",{id:"1-creation-of-a-did"},"1. Creation of a DID"),(0,i.kt)("p",null,"The creation of a DID is a process that is defined by each DID Method. Some DID Methods, such as did:key, are purely generative, such that a DID and a DID document are generated by transforming a single piece of cryptographic material into a conformant representation. Other DID methods might require the use of a verifiable data registry, where the DID and DID document are recognized to exist by third parties only when the registration has been completed, as defined by the respective DID method. Other processes might be defined by the respective DID method."),(0,i.kt)("h3",{id:"2-determining-the-did-subject"},"2. Determining the DID subject"),(0,i.kt)("p",null,"A DID is a specific type of URI (Uniform Resource Identifier), so a DID can refer to any resource. Per ","[RFC3986]",":"),(0,i.kt)("p",null,'the term "resource" is used in a general sense for whatever might be identified by a URI. ',"[...]"," A resource is not necessarily accessible via the Internet.\nResources can be digital or physical, abstract or concrete. Any resource that can be assigned a URI can be assigned a DID. The resource referred to by the DID is the DID subject."),(0,i.kt)("p",null,"The DID controller determines the DID subject. It is not expected to be possible to determine the DID subject from looking at the DID itself, as DIDs are generally only meaningful to machines, not human. A DID is unlikely to contain any information about the DID subject, so further information about the DID subject is only discoverable by resolving the DID to the DID document, obtaining a verifiable credential about the DID, or via some other description of the DID."),(0,i.kt)("p",null,"While the value of the id property in the retrieved DID document must always match the DID being resolved, whether or not the actual resource to which the DID refers can change over time is dependent upon the DID method. For example, a DID method that permits the DID subject to change could be used to generate a DID for the current occupant of a particular role\u2014such as the CEO of a company\u2014where the actual person occupying the role can be different depending on when the DID is resolved."),(0,i.kt)("h3",{id:"3-referring-to-the-did-document"},"3. Referring to the DID document"),(0,i.kt)("p",null,"The DID refers to the DID subject and resolves to the DID document (by following the protocol specified by the DID method). The DID document is not a separate resource from the DID subject and does not have a URI separate from the DID. Rather the DID document is an artifact of DID resolution controlled by the DID controller for the purpose of describing the DID subject."),(0,i.kt)("p",null,"This distinction is illustrated by the graph model shown below.\n",(0,i.kt)("img",{src:n(4740).Z,width:"667",height:"495"})),(0,i.kt)("p",null,"A DID is an identifier assigned by a DID controller to refer to a DID subject and resolve to a DID document that describes the DID subject. The DID document is an artifact of DID resolution and not a separate resource distinct from the DID subject. See also: narrative description."),(0,i.kt)("h3",{id:"4-statements-in-the-did-document"},"4. Statements in the DID document"),(0,i.kt)("p",null,"Each property in a DID document is a statement by the DID controller that describes:"),(0,i.kt)("p",null,"The string of characters defining identifiers for the DID subject (e.g., the id and alsoKnownAs properties)\nHow to interact with the DID subject (e.g., the verificationMethod and service properties).\nHow to interpret the specific representation of the DID document (e.g., the @context property for a JSON-LD representation).\nThe only required property in a DID document is id, so that is the only statement guaranteed to be in a DID document. That statement is illustrated in Figure (above) with a direct link between the DID and the DID subject."),(0,i.kt)("h3",{id:"5-discovering-more-information-about-the-did-subject"},"5. Discovering more information about the DID subject"),(0,i.kt)("p",null,"Options for discovering more information about the DID subject depend on the properties present in the DID document. If the service property is present, more information can be requested from a service endpoint. For example, by querying a service endpoint that supports verifiable credentials for one or more claims (attributes) describing the DID subject."),(0,i.kt)("p",null,"Another option is to use the alsoKnownAs property if it is present in the DID document. The DID controller can use it to provide a list of other URIs (including other DIDs) that refer to the same DID subject. Resolving or dereferencing these URIs might yield other descriptions or representations of the DID subject as illustrated in the figure below."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(7771).Z,width:"722",height:"586"}),"\nA DID document can use the alsoKnownAs property to assert that another URI (including, but not necessarily, another DID) refers to the same DID subject. See also: narrative description."),(0,i.kt)("h3",{id:"6-serving-a-representation-of-the-did-subject"},"6. Serving a representation of the DID subject"),(0,i.kt)("p",null,"If the DID subject is a digital resource that can be retrieved from the internet, a DID method can choose to construct a DID URL which returns a representation of the DID subject itself. For example, a data schema that needs a persistent, cryptographically verifiable identifier could be assigned a DID, and passing a specified DID parameter (see 3.2.1 DID Parameters) could be used as a standard way to retrieve a representation of that schema."),(0,i.kt)("p",null,"Similarly, a DID can be used to refer to a digital resource (such as an image) that can be returned directly from a verifiable data registry if that functionality is supported by the applicable DID method."),(0,i.kt)("h3",{id:"7-assigning-dids-to-existing-web-resources"},"7. Assigning DIDs to existing web resources"),(0,i.kt)("p",null,"If the controller of a web page or any other web resource wants to assign it a persistent, cryptographically verifiable identifier, the controller can give it a DID. For example, the author of a blog hosted by a blog hosting company (under that hosting company's domain) could create a DID for the blog. In the DID document, the author can include the alsoKnownAs property pointing to the current URL of the blog, e.g.:"),(0,i.kt)("p",null,'"alsoKnownAs": ','["https://myblog.blogging-host.example/home"]',"\nIf the author subsequently moves the blog to a different hosting company (or to the author's own domain), the author can update the DID document to point to the new URL for the blog, e.g.:"),(0,i.kt)("p",null,'"alsoKnownAs": ','["https://myblog.example/"]',"\nThe DID effectively adds a layer of indirection for the blog URL. This layer of indirection is under the control of the author instead of under the control of an external administrative authority such as the blog hosting company. This is how a DID can effectively function as an enhanced URN (Uniform Resource Name)\u2014a persistent identifier for an information resource whose network location might change over time."),(0,i.kt)("h3",{id:"8-he-relationship-between-did-controllers-and-did-subjects"},"8. he relationship between DID controllers and DID subjects"),(0,i.kt)("p",null,"To avoid confusion, it is helpful to classify DID subjects into two disjoint sets based on their relationship to the DID controller."),(0,i.kt)("h4",{id:"81-set-1-the-did-subject-is-the-did-controller"},"8.1 Set #1: The DID subject is the DID controller"),(0,i.kt)("p",null,"The first case, shown in Figure 10, is the common scenario where the DID subject is also the DID controller. This is the case when an individual or organization creates a DID to self-identify."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(2817).Z,width:"667",height:"516"})),(0,i.kt)("p",null,"From a graph model perspective, even though the nodes identified as the DID controller and DID subject in Figure above are distinct, there is a logical arc connecting them to express a semantic equivalence relationship."),(0,i.kt)("h4",{id:"82-set-2-the-did-subject-is-not-the-did-controller"},"8.2 Set #2: The DID subject is not the DID controller"),(0,i.kt)("p",null,"The second case is when the DID subject is a separate entity from the DID controller. This is the case when, for example, a parent creates and maintains control of a DID for a child; a corporation creates and maintains control of a DID for a subsidiary; or a manufacturer creates and maintains control of a DID for a product, an IoT device, or a digital file."),(0,i.kt)("p",null,"From a graph model perspective, the only difference from Set 1 that there is no equivalence arc relationship between the DID subject and DID controller nodes."),(0,i.kt)("h3",{id:"9-multiple-did-controllers"},"9. Multiple DID controllers"),(0,i.kt)("p",null,"A DID document might have more than one DID controller. This can happen in one of two ways."),(0,i.kt)("h4",{id:"91-independent-control"},"9.1 Independent Control"),(0,i.kt)("p",null,"In this case, each of the DID controllers might act on its own, i.e., each one has full power to update the DID document independently. From a graph model perspective, in this configuration:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Each additional DID controller is another distinct graph node (which might be identified by its own DID)."),(0,i.kt)("li",{parentName:"ul"},'The same arcs ("controls" and "controller") exist between each DID controller and the DID document.')),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(2672).Z,width:"824",height:"504"})),(0,i.kt)("h4",{id:"92-group-control"},"9.2 Group Control"),(0,i.kt)("p",null,'In the case of group control, the DID controllers are expected to act together in some fashion, such as when using a cryptographic algorithm that requires multiple digital signatures ("multi-sig") or a threshold number of digital signatures ("m-of-n"). From a functional standpoint, this option is similar to a single DID controller because, although each of the DID controllers in the DID controller group has its own graph node, the actual control collapses into a single logical graph node representing the DID controller group as shown in Figure below.'),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(319).Z,width:"888",height:"297"})),(0,i.kt)("h3",{id:"10-change-the-did-subject"},"10. Change the DID subject"),(0,i.kt)("p",null,"A DID document has exactly one DID which refers to the DID subject. The DID is expressed as the value of the id property. This property value is immutable for the lifetime of the DID document."),(0,i.kt)("p",null,"However, it is possible that the resource identified by the DID, the DID subject, may change over time. This is under the exclusive authority of the DID controller. For more details, see section 9.16 Persistence."),(0,i.kt)("h3",{id:"11-changing-the-did-controller"},"11. Changing the DID controller"),(0,i.kt)("p",null,"The DID controller for a DID document might change over time. However, depending on how it is implemented, a change in the DID controller might not be made apparent by changes to the DID document itself. For example, if the change is implemented through a shift in ownership of the underlying cryptographic keys or other controls used for one or more of the verification methods in the DID document, it might be indistinguishable from a standard key rotation."),(0,i.kt)("p",null,"On the other hand, if the change is implemented by changing the value of the controller property, it will be transparent."),(0,i.kt)("p",null,"If it is important to verify a change of DID controller, implementers are advised to authenticate the new DID controller against the verification methods in the revised DID document."),(0,i.kt)("h2",{id:"architectural-implenmentations"},"Architectural Implenmentations"),(0,i.kt)("p",null,"The architecture of the DID implenmentations is various by different provider, there are some illustrates as below:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Use Ethereum Node\n",(0,i.kt)("img",{src:n(8771).Z,width:"2772",height:"1316"}))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"AWS Architecture\nThis picture illustrates the AWS architecture for hosting the Universal resolver as well as the traffic-flow through the system."))),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(7435).Z,width:"1010",height:"798"})),(0,i.kt)("p",null,"The entry-point to the system is the public Internet facing Application Load Balancer (ALB), that sits at the edge of the AWS cloud and is bound to the DNS name ",(0,i.kt)("inlineCode",{parentName:"p"},"\u201cdev.uniresolver.io\u201d"),". When resolving DIDs the traffic flows through the ALB to the resolver. Based on the configuration of each DID-method the resolver calls the corresponding DID-driver (typical scenario) or may call another HTTP endpoint (another resolver or directly the DLT if HTTP is supported). In order to gain performance, blockchain nodes may also be added to the deployment, as sketched at Driver C."),(0,i.kt)("p",null,"The Kubernetes cluster is spanned across multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"Availability Zones (AZ)"),", which are essential parts for providing fault-tolerance and achieving a high-availability HA of the system. This means that no downtime is to be expected in case of failing parts of the system, as the healthy parts will take over operations reliably."),(0,i.kt)("p",null,"If containers, like DID-Drivers, are added or removed, the ALB ingress controller ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes-sigs.github.io/aws-alb-ingress-controller/"},"https://kubernetes-sigs.github.io/aws-alb-ingress-controller/")," takes care of notifying the ALB. Due to this mechanism the ALB stays aware of the system state and is able to keep traffic-routes healthy. By use of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kubernetes-sigs/external-dns"},"https://github.com/kubernetes-sigs/external-dns")," the DNS Service Route 53 is updated. Further details regarding the automated system-update are described at CI-CD."),(0,i.kt)("p",null,"More details see ",(0,i.kt)("a",{parentName:"p",href:"https://identity.foundation/education/"},"DIF Education")," resources."),(0,i.kt)("h2",{id:"the-layered-architecture"},"The Layered Architecture"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Layer 1: DLT")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Peopledata-did")," use ",(0,i.kt)("inlineCode",{parentName:"p"},"Ethereum")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Quorum")," as its DLT layer. And Distribution storage support ",(0,i.kt)("inlineCode",{parentName:"p"},"IPFS")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"peopleswarm")," as DID documents storage. "),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"@peopledata/registry-contract")," using smart contarct to registry did and identifier operations. "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Layer 2: DPKI(Decentralized PKI)  Network")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"peopledata-resolver")," as a middleware to bridge Layer 1 and Layer 3."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Layer 3: Credential Exchange ")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Verixyz agent")," provide DIDComm and credntials exchange between different apps."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(8753).Z,width:"1671",height:"1065"})),(0,i.kt)("h2",{id:"the-general-steps"},"The General Steps"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"User create its owen DID from ",(0,i.kt)("inlineCode",{parentName:"li"},"verixyz client")," app; "),(0,i.kt)("li",{parentName:"ul"},"User can choose which VCs Issuer he should use; and then follow the Issuer's instruction;"),(0,i.kt)("li",{parentName:"ul"},"Issuer review user's files and issue VCs to User;"),(0,i.kt)("li",{parentName:"ul"},"User use ID login 3rd-App, and 3rd-App require VCs from User;"),(0,i.kt)("li",{parentName:"ul"},"User auth 3rd-App acquire VCs; 3rd-App verifiy the VCs ;"),(0,i.kt)("li",{parentName:"ul"},"User success login 3rd-App.")))}h.isMDXComponent=!0},7435:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/aws-architecture-b6c976c20c1989630f4cfb1f643f563f.png"},8771:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/did-arch-En-c6a297c25eb8e6b20ba4191202226d2f.png"},8753:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/did-arch-32a008abf7a956cf23b4798622b28953.png"},2860:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/did_detailed_architecture_overview-246c3b0cad39e7a2882b1b8bb21bcbfd.svg"},4740:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/figure-a.1-did-and-did-document-graph-04af0594e0414446d3d18abe6a9b3fae.svg"},7771:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/figure-a.2-also-known-as-graph-eb759419eff395ac928bb4c35a03c6de.svg"},2817:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/figure-b.1-controller-and-subject-equivalence-80811010447ab24b6561ce0b35197733.svg"},2672:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/figure-c.1-independent-did-controllers-e5f8b060e9d756e9d2ee9dfb0f88683f.svg"},319:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/figure-c.2-group-did-controllers-1f3f872ddc1804b3eed4a2690314959f.svg"}}]);